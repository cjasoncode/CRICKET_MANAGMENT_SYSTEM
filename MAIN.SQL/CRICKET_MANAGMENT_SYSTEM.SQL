CREATE DATABASE CRICKET_MANAGMENT_SYSTEM;
USE CRICKET_MANAGMENT_SYSTEM;
 
 
--  TABLE 1 - TOURNAMENT

CREATE TABLE TOURNAMENT
(TOURNAMENT_ID INT PRIMARY KEY,
TOURNAMENT_NAME VARCHAR(50),
START_DATE DATE,
END_DATE DATE
);
 
INSERT INTO TOURNAMENT (TOURNAMENT_ID, TOURNAMENT_NAME, START_DATE, END_DATE)
VALUES
(222,"INDIAN PREMIER LEAGUE", '2025-03-28' , '2025-04-18');




--  TABLE 2 - TEAMS

CREATE TABLE TEAMS (
TEAM_ID INT PRIMARY KEY,
TEAM_NAME VARCHAR(50),
HEAD_COACH VARCHAR(50)
);

INSERT INTO TEAMS (TEAM_ID, TEAM_NAME, HEAD_COACH)
VALUES
(777 , "CHENNAI SUPER KINGS" , "STEPHEN FLEMING"),
(454 , "MUMBAI INDIANS" , "MAHELA JAYAWARDENE"),
(323 , "KOLKATA KNIGHT RIDERS" , "CHANDRAKANT PANDIT"),
(181 , "ROYAL CHALLENGERS BENGALURU" , "ANDY FLOWER"),
(177 , "GUJARAT TITANS" , "ASHISH NEHRA");



--  TABLE 3 - VENUE

CREATE TABLE VENUE(
VENUE_ID INT PRIMARY KEY,
VENUE_NAME VARCHAR(50) ,
CITY VARCHAR(30));

INSERT INTO VENUE(VENUE_ID,VENUE_NAME,CITY)
VALUES
(501,'CHEPAUK','CHENNAI'),
(502,'WANKHEDE','MUMBAI'),
(503,'EDEN GARDENS','KOLKATA'),
(504,'CHINASWAMY','BENGALURU'),
(505,'MOTERA','AHEMDABAD');

 
--  TABLE 4 - PLAYERS

CREATE TABLE PLAYERS(
PLAYER_ID INT PRIMARY KEY,
PLAYER_NAME VARCHAR(40),
PLAYER_AGE INT NOT NULL,
PLAYER_ROLE VARCHAR(30),
TEAM_ID INT , -- HERE PLACE FOREIGN KEY 
FOREIGN KEY  (TEAM_ID) REFERENCES TEAMS(TEAM_ID)

);

INSERT INTO PLAYERS(PLAYER_ID,PLAYER_NAME,PLAYER_AGE,PLAYER_ROLE,TEAM_ID)
VALUES


--  CHENNAI SUPER KINGS
(907,'MAHENDER SINGH DHONI',44,'WICKET-KEEPER/BATSMAN',777),
(908,'RAVIDRE JADEJA',36,'ALL-ROUNDER',777),
(931,'RITURAJ GAIKWAD',28,'BATSMAN/CAPTAIN',777),
(925,'SHIVAM DUBE',32,'BATSMAN',777),
(912,'DEWALD BREVIS',22,'BATSMAN',777),


--  MUMBAI INDIANS
(145,'ROHIT SHARMA',38,'C/BATSMAN',454),
(113,'SURYA KUMAR YADAV',34,'BATSMAN',454),
(133,'HARDHIK PANDYA',31,'ALL-ROUNDER',454),
(193,'JASPRIT BUMRAH',31,'BOWLER',454),
(174,'MITCHELL SANTNER',33,'BOWLER',454),


-- KOLKATA KNIGHT RIDERS
(227,'ANJIKYA RAHANE',37,'CAPTAIN/BATSMAN',323),
(274,'SUNIL NARINE',37,'ALL-ROUNDER',323),
(212,'ANDRE RUSSELL',37,'ALL-ROUNDER',323),
(229,'VARUN CHAKRAVARTY',33,'BOWLER',323),
(225,'VENKATESH IYER',30,'BATSMAN',323),


-- ROYAL CHALLENGERS BENGALURU
(318, 'VIRAT KOHLI' ,36 ,'BAT',181),
(397, 'RAJAT PATIDAR' ,31 ,'BAT',181),
(361, 'PHIL SALT' ,28 ,'BAT',181),
(315, 'BHUVNESHWAR KUMAR' ,34 ,'BOWL',181),
(338, 'JOSH HAZLEWOOD' ,34 ,'BOWL',181),


-- GUJARAT TITANS
(407,'SHUBMAN GILL',25 ,'CAPTAIN/BATSMAN',177),
(423,'SAI SUDARSHAN',23 ,'BAT',177),
(419,'RASHID KHAN',26 ,'BOWL',177),
(446,'RAHUL TEWATIA',31 ,'ALL-ROUNDER',177),
(473,'MOHAMMED SIRAJ',30 ,'BOWL',177);


--  TABLE 5 - MATCHES


CREATE TABLE MATCHES(
MATCH_ID INT PRIMARY KEY,
TOURNAMENT_ID INT , -- HERE PLACE FOREIGN KEY 
TEAM_A INT , -- HERE PLACE FOREIGN KEY 
TEAM_B INT , -- HERE PLACE FOREIGN KEY 
VENUE_ID INT, -- HERE PLACE FOREIGN KEY
MATCH_DATE DATE,
WINNER_ID INT , -- HERE PLACE FOREIGN KEY

FOREIGN KEY (TOURNAMENT_ID) REFERENCES TOURNAMENT(TOURNAMENT_ID),
FOREIGN KEY (VENUE_ID) REFERENCES VENUE(VENUE_ID),
FOREIGN KEY (TEAM_A) REFERENCES TEAMS(TEAM_ID),
FOREIGN KEY (TEAM_B) REFERENCES TEAMS(TEAM_ID),
FOREIGN KEY (WINNER_ID) REFERENCES TEAMS(TEAM_ID)

);

INSERT INTO Matches (MATCH_ID, TOURNAMENT_ID, TEAM_A, TEAM_B ,VENUE_ID ,MATCH_DATE ,WINNER_ID ) 
VALUES
(1, 222 ,777, 454, 501, '2025-03-28',777),   -- MATCH 1 - CSK VS MI , CSK WON 
(2, 222 ,323, 181, 503, '2025-03-30',181),   -- MATCH 2 - KKR VS RCB , RCB WON
(3, 222 ,177, 777, 505, '2025-04-01',177),   -- MATCH 3 - GT VS CSK , GT WON
(4, 222 ,454, 323, 502, '2025-04-03',454),   -- MATCH 4 - MI VS KKR , MI WON
(5, 222 ,181, 177, 504, '2025-04-05',181),   -- MATCH 5 - RCB VS GT , RCB WON
(6, 222 ,454, 181, 502, '2025-04-07',454),   -- MATCH 6 - MI VS RCB , MI WON
(7, 222 ,323, 177, 503, '2025-04-09',177),   -- MATCH 7 - KKR VS GT , GT WON
(8, 222 ,777, 181, 501, '2025-04-11',181),   -- MATCH 8 - CSK VS RCB , RCB WON
(9, 222 ,454, 177, 502, '2025-04-13',177),   -- MATCH 9 - MI VS GT , GT WON
(10, 222 ,777, 323, 501, '2025-04-15',777), -- MATCH 10 - CSK VS KKR , CSK WON 
(11, 222,181, 177,505, '2025-04-18', 181);   -- MATCH 11 - RCB VS GT - RCB WON

 
--  TABLE 6 - FINAL_MATCH

CREATE TABLE FINAL_MATCH (
FINAL_MATCH_ID INT PRIMARY KEY , -- HERE PLACE FOREIGN KEY 
TOURNAMENT_ID INT , -- HERE PLACE FOREIGN KEY 
FINALTEAM_A INT , -- HERE PLACE FOREIGN KEY 
FINALTEAM_B INT , -- HERE PLACE FOREIGN KEY 
VENUE_ID INT, -- HERE PLACE FOREIGN KEY
MATCH_DATE DATE,
CHAMPION_TEAM INT ,-- HERE PLACE FOREIGN KEY

FOREIGN KEY   (VENUE_ID) REFERENCES VENUE (VENUE_ID),
FOREIGN KEY   (TOURNAMENT_ID) REFERENCES TOURNAMENT(TOURNAMENT_ID),
FOREIGN KEY   (FINALTEAM_A) REFERENCES TEAMS(TEAM_ID),
FOREIGN KEY   (FINALTEAM_B) REFERENCES TEAMS(TEAM_ID),
FOREIGN KEY   (CHAMPION_TEAM) REFERENCES TEAMS(TEAM_ID),
FOREIGN KEY   (FINAL_MATCH_ID) REFERENCES MATCHES(MATCH_ID)


);


 INSERT INTO FINAL_MATCH (FINAL_MATCH_ID ,TOURNAMENT_ID ,FINALTEAM_A  ,FINALTEAM_B ,VENUE_ID ,MATCH_DATE,CHAMPION_TEAM)
 VALUES
 (11, 222 ,181 ,177 ,505 ,'2025-04-18',181 );  


 


--  TABLE 7 - POINTS TABLE

CREATE TABLE POINTS_TABLE (
TEAM_ID INT , -- HERE PLACE FOREIGN KEY
MATCHES_PLAYED INT DEFAULT 4,
WINS INT,
LOSSES INT,
POINTS INT,

FOREIGN KEY  (TEAM_ID) REFERENCES TEAMS(TEAM_ID) 

);

INSERT INTO POINTS_TABLE (TEAM_ID ,MATCHES_PLAYED ,WINS ,LOSSES ,POINTS)
VALUES
(181 ,DEFAULT ,3 ,1 ,6),  -- RCB
(177 ,DEFAULT ,3 ,1 ,6),  -- GT
(777 ,DEFAULT ,2 ,2 ,4),  -- CSK
(454 ,DEFAULT ,2 ,2 ,4),  -- MI
(323 ,DEFAULT ,0 ,4 ,0);  -- KKR


--  TABLE 8 - PLAYER STATS

 
 
CREATE TABLE PLAYER_STATS
(	
PLAYER_ID INT , -- HERE PLACE FOREIGN KEY 
RUNS INT ,
SIXES INT ,
FOUR INT ,
WICKETS INT ,
ECONOMY DECIMAL(4,2),
STRIKE_RATE DECIMAL(5,2),
FOREIGN KEY  (PLAYER_ID) REFERENCES PLAYERS (PLAYER_ID)

);

 

INSERT INTO PLAYER_STATS (PLAYER_ID,RUNS,SIXES,FOUR,WICKETS,ECONOMY,STRIKE_RATE)
VALUES

-- CSK
(907, 185, 10, 14, 0, 0.00, 142.30),   -- MS DHONI
(908, 127, 4, 8, 6, 6.25, 132.00),     -- R JADEJA
(931, 220, 12, 21, 0, 0.00, 148.50),   -- RITURAJ
(925, 156, 8, 11, 5, 0.00, 135.20),    -- S DUBE
(912, 98, 5, 6, 2, 0.00, 128.45),      -- D. BRAVIS

-- MI
(145, 210, 15, 20, 0, 0.00, 153.00),   -- ROHIT SHARMA
(113, 178, 11, 17, 0, 0.00, 149.10),   -- SURYA KUMAR YADAV
(133, 140, 7, 10, 4, 7.00, 138.00),    -- HARDIK PANDYA
(193, 22, 2, 1, 10, 5.80, 80.00),       -- JASPRIT BUMHRA
(174, 12, 0, 0, 9, 6.75, 65.00),       -- M. SANTNER

-- KKR
(227, 160, 9, 13, 0, 0.00, 126.30),     -- A. RAHANE
(274, 105, 6, 9, 7, 6.40, 133.00),      -- SUNIL NARINE
(212, 119, 5, 7, 4, 7.25, 141.00),      -- ANDRE RUSSEL
(229, 10, 0, 1, 9, 6.20, 58.00),        -- VARUN CHAKARAVARTHY
(225, 145, 8, 12, 1, 0.00, 130.50),     -- VENKY IYER

-- RCB
(318, 245, 17, 23, 0, 0.00, 156.00),     -- VIRAT KOHLI
(397, 133, 6, 11, 0, 0.00, 140.20),      -- RAJAT PARTIDAR
(361, 102, 5, 9, 0, 0.00, 125.75),       -- PHIL SALT           
(315, 15, 1, 0, 12, 6.00, 60.00),         -- BHUVNESHWAR KUMAR
(338, 8, 0, 1, 10, 6.80, 45.00),          -- JOSH HAZLEWOOD


-- GT
(407, 218, 13, 18, 0, 0.00, 147.30),        --  SHUBMAN GILL
(423, 110, 5, 10, 0, 0.00, 129.40),         --  SAI SUDARSHAN
(419, 42, 2, 3, 10, 5.90, 75.00),           --  RASHID KHAN
(446, 92, 3, 6, 3, 7.50, 120.00),           --  RAHUL TEWATIA
(473, 15, 0, 1, 9, 6.10, 62.00);            --  MOHAMMED SIRAJ


-- TABLE 9 AUCTION


CREATE TABLE AUCTION(
PLAYER_ID INT NOT NULL, -- HERE PLACE foreign key
BASE_PRICE INT ,
SOLD_PRICE INT,
NATIONALITY VARCHAR(50) ,
FOREIGN KEY (PLAYER_ID) REFERENCES PLAYERS (PLAYER_ID)

);



INSERT INTO AUCTION (PLAYER_ID, BASE_PRICE, SOLD_PRICE, NATIONALITY)
VALUES
-- CSK Players
(907,   2000000, 3000000, 'India'),         -- Dhoni
(908,   2000000, 2500000, 'India'),         -- Jadeja
(931,   2000000, 2375000, 'India'),         -- Rituraj Gaikwad
(925,   1500000, 1700000, 'India'),         -- Shivam Dube
(912,   1500000, 1600000, 'South Africa'),  -- Dewald Brevis

-- MI Players
(145,   2000000, 1400000, 'India'),         -- Rohit Sharma
(113,   2000000, 1800000, 'India'),         -- Suryakumar Yadav
(133,   2000000, 1200000, 'India'),         -- Hardik Pandya
(193,   2000000, 1250000, 'India'),         -- Jasprit Bumrah
(174,   2000000, 900000,  'New Zealand'),   -- Mitchell Santner

-- KKR Players
(227,   2000000, 1100000, 'India'),         -- Anjika Rahane
(274,   2000000, 1600000, 'West Indies'),   -- Sunil Narine
(212,   2000000, 1250000, 'West Indies'),   -- Andre Russell
(229,   2000000, 950000,  'India'),         -- Varun Chakravarthy
(225,   2000000, 950000,  'India'),         -- Venkatesh Iyer

-- RCB Players
(318,   2000000, 2700000, 'India'),        -- Virat Kohli
(397,   1500000, 1100000, 'India'),        -- Rajat Patidar
(361,   2000000, 1150000, 'England'),      -- Phil Salt
(315,   2000000, 975000,  'India'),        -- Bhuvneshwar Kumar
(338,   2000000, 1250000, 'Australia'),    -- Josh Hazlewood

-- GT Players
(407,   2000000, 1000000, 'India'),       -- Shubman Gill
(423,   2000000, 1050000, 'India'),       -- Sai Sudharsan
(419,   2000000, 1225000, 'Afghanistan'), -- Rashid Khan
(446,   1500000, 800000,  'India'),       -- Rahul Tewatia
(473,   2000000, 1225000, 'India');       -- Mohammed Siraj


								-- SQL QUERY QUESTIONS - CRICKET MANAGEMENT SYSTEM

--  1. List all the teams participating in the tournament.

 SELECT TEAM_NAME 
 FROM TEAMS;

--  2. Find the players who scored more than 200 runs in the tournament.

SELECT PLAYERS.PLAYER_NAME , PLAYER_STATS.RUNS
FROM PLAYERS
INNER JOIN 
PLAYER_STATS
ON PLAYERS.PLAYER_ID = PLAYER_STATS.PLAYER_ID
WHERE PLAYER_STATS.RUNS>200;

-- 3. Display the match schedule along with venue and participating teams.

SELECT VENUE.VENUE_NAME AS VENUE,
        TEAM_A.TEAM_NAME AS TEAM_A,
		TEAM_B.TEAM_NAME AS TEAM_B,
        MATCHES.MATCH_DATE AS DATE,
		WINNER.TEAM_NAME AS WINNER
        
 FROM 
 MATCHES JOIN VENUE  
 ON MATCHES.VENUE_ID = VENUE.VENUE_ID
 JOIN TEAMS AS TEAM_A ON MATCHES.TEAM_A = TEAM_A.TEAM_ID
 JOIN TEAMS AS TEAM_B ON MATCHES.TEAM_B = TEAM_B.TEAM_ID
 JOIN TEAMS AS WINNER ON MATCHES.WINNER_ID = WINNER.TEAM_ID 
 ORDER BY MATCHES.MATCH_DATE ASC;

-- 4. List the players who took more than 8 wickets.

SELECT PLAYERS.PLAYER_NAME , PLAYER_STATS.WICKETS
FROM PLAYERS
INNER JOIN 
PLAYER_STATS
ON PLAYERS.PLAYER_ID = PLAYER_STATS.PLAYER_ID
WHERE PLAYER_STATS.WICKETS>8
ORDER BY PLAYER_STATS.WICKETS desc;

-- 5. Show the details of the final match including venue and champion team.

 SELECT
 FINAL_A.TEAM_NAME AS TEAM_A,         --   FINAL_A IS TEMP NAME
 FINAL_B.TEAM_NAME AS TEAM_B,         --   FINAL_B IS TEMP NAME
 VENUE.VENUE_NAME AS VENUE, 
 CHAMPION.TEAM_NAME AS WINNER        --   CHAMPION
                                                                                                                                                           
 FROM FINAL_MATCH 
 JOIN  TEAMS AS FINAL_A ON FINAL_MATCH.FINALTEAM_A = FINAL_A.TEAM_ID 
  JOIN  TEAMS AS FINAL_B ON  FINAL_MATCH.FINALTEAM_B = FINAL_B.TEAM_ID 
  JOIN VENUE ON FINAL_MATCH.VENUE_ID = VENUE.VENUE_ID
   JOIN  TEAMS AS CHAMPION ON FINAL_MATCH.CHAMPION_TEAM = CHAMPION.TEAM_ID ;
 
   
      
-- 6. Find the player with the highest strike rate.

SELECT PLAYERS.PLAYER_NAME , PLAYER_STATS.STRIKE_RATE
FROM PLAYERS
JOIN 
PLAYER_STATS
ON PLAYERS.PLAYER_ID = PLAYER_STATS.PLAYER_ID
WHERE PLAYER_STATS.STRIKE_RATE ORDER BY STRIKE_RATE DESC;

-- 7. List all matches played by Royal Challengers Bengaluru.

 SELECT 
    TEAM_A.TEAM_NAME ,
    TEAM_B.TEAM_NAME  
FROM MATCHES
JOIN TEAMS AS TEAM_A 
    ON MATCHES.TEAM_A = TEAM_A.TEAM_ID
JOIN TEAMS AS TEAM_B 
    ON MATCHES.TEAM_B = TEAM_B.TEAM_ID
WHERE TEAM_A.TEAM_NAME = 'Royal Challengers Bengaluru'
   OR TEAM_B.TEAM_NAME = 'Royal Challengers Bengaluru';

 

-- 8. Display the points table sorted by points in descending order.

SELECT TEAMS.TEAM_NAME , 
POINTS_TABLE.MATCHES_PLAYED,
POINTS_TABLE.WINS,
POINTS_TABLE.LOSSES,
POINTS_TABLE.POINTS
FROM
TEAMS
JOIN
POINTS_TABLE
ON TEAMS.TEAM_ID = POINTS_TABLE.TEAM_ID
ORDER BY POINTS DESC;

-- 9. Find the team with the most number of wins.

SELECT TEAMS.TEAM_NAME , POINTS_TABLE.WINS
FROM 
TEAMS
JOIN
POINTS_TABLE
ON TEAMS.TEAM_ID = POINTS_TABLE.TEAM_ID
ORDER BY POINTS DESC  LIMIT 1;

-- 10. Show all the foreign players who were sold in the auction.

SELECT   PLAYERS.PLAYER_NAME , PLAYERS.PLAYER_AGE , PLAYERS.PLAYER_ROLE ,  AUCTION.NATIONALITY , AUCTION.SOLD_PRICE
FROM AUCTION
JOIN
PLAYERS
ON AUCTION.PLAYER_ID = PLAYERS.PLAYER_ID
WHERE NATIONALITY != 'INDIA';

-- 11. List the bowlers with economy rate less than 6.5.

SELECT PLAYERS.PLAYER_NAME, PLAYERS.PLAYER_ROLE , PLAYER_STATS.ECONOMY
FROM PLAYERS
INNER JOIN 
PLAYER_STATS
ON PLAYERS.PLAYER_ID = PLAYER_STATS.PLAYER_ID
WHERE PLAYER_ROLE = 'BOWLER' AND  PLAYER_STATS.ECONOMY <= 6.5 ;


-- 12. Display the head coaches of all teams.

SELECT TEAM_NAME , HEAD_COACH 
FROM TEAMS;

-- 13. List matches won by Gujarat Titans.

 SELECT 
     VENUE.VENUE_NAME,
     MATCHES.MATCH_DATE,
	 TEAM_A.TEAM_NAME,
	 TEAM_B.TEAM_NAME,
	 WINNER.TEAM_NAME
 FROM
 MATCHES JOIN VENUE 
 ON MATCHES.VENUE_ID = VENUE.VENUE_ID
 JOIN TEAMS AS TEAM_A ON MATCHES.TEAM_A = TEAM_A.TEAM_ID
 JOIN TEAMS AS TEAM_B ON MATCHES.TEAM_B = TEAM_B.TEAM_ID
 JOIN TEAMS AS WINNER ON MATCHES.WINNER_ID = WINNER.TEAM_ID 
 WHERE WINNER.TEAM_NAME = "GUJARAT TITANS" ;
 
-- 14. Show player stats for Chennai Super Kings.

SELECT 
      PLAYERS.PLAYER_NAME, 
      TEAMS.TEAM_NAME ,
      PLAYER_STATS.RUNS ,
      PLAYER_STATS.SIXES ,
      PLAYER_STATS.FOUR ,
      PLAYER_STATS.WICKETS, 
      PLAYER_STATS.ECONOMY,
PLAYER_STATS.STRIKE_RATE
FROM 
PLAYERS JOIN TEAMS ON PLAYERS.TEAM_ID = TEAMS.TEAM_ID
JOIN PLAYER_STATS ON PLAYER_STATS.PLAYER_ID = PLAYERS.PLAYER_ID
WHERE TEAM_NAME ="CHENNAI SUPER KINGS";


-- 15. List players whose base price was above 1.5 million.

SELECT PLAYERS.PLAYER_NAME , AUCTION.BASE_PRICE
FROM 
PLAYERS
JOIN
AUCTION
ON PLAYERS.PLAYER_ID = AUCTION.PLAYER_ID
WHERE BASE_PRICE > 1500000 ;

-- 16. Find the youngest player in the tournament.

SELECT PLAYERS.PLAYER_AGE , PLAYERS.PLAYER_NAME ,  TEAMS.TEAM_NAME
FROM 
PLAYERS
JOIN
TEAMS
ON PLAYERS.TEAM_ID = TEAMS.TEAM_ID
 ORDER BY PLAYER_AGE ASC LIMIT 1 ;

-- 17. Display match details where the match was held at Wankhede stadium.

SELECT 
       VENUE.VENUE_NAME , 
       MATCHES.MATCH_DATE ,
       TEAM_A.TEAM_NAME,  -- JOO TEAMS_A LIKHA WOH TEMP NAME HAN 
       TEAM_B.TEAM_NAME   -- JOO TEAMS_B LIKHA WOH TEMP NAME HAN 
FROM 
VENUE JOIN MATCHES
ON VENUE.VENUE_ID = MATCHES.VENUE_ID
JOIN TEAMS AS TEAM_A ON MATCHES.TEAM_A = TEAM_A.TEAM_ID   -- TEAMS TABLE KO YEHA TEAM_A KA NAAM DIYA GYA HAN
JOIN TEAMS AS TEAM_B ON MATCHES.TEAM_B = TEAM_B.TEAM_ID   -- TEAMS TABLE KO YEHA TEAM_B KA NAAM DIYA GYA HAN
WHERE VENUE_NAME = 'WANKHEDE';


-- 18. List the total number of matches each team played.

SELECT   TEAMS.TEAM_NAME ,   POINTS_TABLE.MATCHES_PLAYED
FROM 
TEAMS 
JOIN
POINTS_TABLE
ON TEAMS.TEAM_ID = POINTS_TABLE.TEAM_ID;
 


-- 19. Show details of all-rounders in the tournament.

SELECT  PLAYERS.PLAYER_NAME , PLAYER_STATS.* , PLAYERS.PLAYER_ROLE
FROM 
PLAYERS
JOIN 
PLAYER_STATS 
ON PLAYERS.PLAYER_ID = PLAYER_STATS.PLAYER_ID
WHERE PLAYERS.PLAYER_ROLE = "ALL-ROUNDER" ;


-- 20. Find the player with the highest number of sixes.

SELECT PLAYERS.PLAYER_NAME , PLAYER_STATS.SIXES
FROM PLAYERS
JOIN 
PLAYER_STATS
ON PLAYERS.PLAYER_ID = PLAYER_STATS.PLAYER_ID
ORDER BY PLAYER_STATS.SIXES DESC;



 